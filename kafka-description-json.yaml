kafka:
  tableDescriptions:
    citibike.json: |-
      {
        "tableName": "citibike",
        "topicName": "citibike",
        "schemaName": "citi",
        "message": {
          "dataFormat" : "json",
          "fields": [
            {
              "name": "ride_id",
              "mapping": "rideId",
              "type": "VARCHAR"
            },
            {
              "name": "rideable_type",
              "mapping": "rideableType",
              "type": "VARCHAR"
            },
            {
              "name": "started_at",
              "type": "TIMESTAMP",
              "dataFormat": "milliseconds-since-epoch",
              "mapping": "startedAt"
            },
            {
              "name": "ended_at",
              "type": "TIMESTAMP",
              "dataFormat": "milliseconds-since-epoch",
              "mapping": "endedAt"
            },
            {
              "name": "start_station_name",
              "mapping": "startStationName",
              "type": "VARCHAR"
            },
            {
              "name": "start_station_id",
              "mapping": "startStationId",
              "type": "VARCHAR"
            },
            {
              "name": "end_station_name",
              "mapping": "endStationName",
              "type": "VARCHAR"
            },
            {
              "name": "end_station_id",
              "mapping": "endStationId",
              "type": "VARCHAR"
            },
            {
              "name": "start_lat",
              "mapping": "startLat",
              "type": "DOUBLE"
            },
            {
              "name": "start_lng",
              "mapping": "startLon",
              "type": "DOUBLE"
            },
            {
              "name": "end_lat",
              "mapping": "endLat",
              "type": "DOUBLE"
            },
            {
              "name": "end_lng",
              "mapping": "endLon",
              "type": "DOUBLE"
            },
            {
              "name": "member_casual",
              "mapping": "memberCasual",
              "type": "VARCHAR"
            }
          ]
        }
      }
    entity.json: |-
      {
        "tableName": "entity",
        "topicName": "entity",
        "schemaName": "comms-broker",
        "message": {
          "dataFormat" : "json",
          "fields": [
            {
              "name": "id",
              "mapping": "id",
              "type": "VARCHAR"
            },
            {
              "name": "message",
              "mapping": "message",
              "type": "VARCHAR"
            },
            {
              "name": "descriptive_label",
              "mapping": "descriptiveLabel",
              "type": "VARCHAR"
            },
            {
              "name": "mode1",
              "mapping": "mode1",
              "type": "VARCHAR"
            },
            {
              "name": "mode2",
              "mapping": "mode2",
              "type": "VARCHAR"
            },
            {
              "name": "mode3",
              "mapping": "mode3",
              "type": "VARCHAR"
            },
            {
              "name": "mode5",
              "mapping": "mode5",
              "type": "VARCHAR"
            },
            {
              "name": "tail_number",
              "mapping": "tailNumber",
              "type": "VARCHAR"
            },
            {
              "name": "call_sign",
              "mapping": "callSign",
              "type": "VARCHAR"
            },
            {
              "name": "updated_at",
              "type": "TIMESTAMP",
              "dataFormat": "milliseconds-since-epoch",
              "mapping": "updatedAt"
            },
            {
              "name": "identity_timestamp",
              "type": "TIMESTAMP",
              "dataFormat": "milliseconds-since-epoch",
              "mapping": "identityTimestamp"
            },
            {
              "name": "track_number",
              "mapping": "trackNumber",
              "type": "VARCHAR"
            }
          ]
        }
      }
